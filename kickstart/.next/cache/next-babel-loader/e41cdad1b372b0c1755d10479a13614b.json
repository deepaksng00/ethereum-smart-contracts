{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { Form, Input, Message, Checkbox, Button } from \"semantic-ui-react\";\nimport Campaign from \"../ethereum/campaign\";\nimport web3 from \"../ethereum/web3\";\nimport { Router } from \"../routes\";\n\nclass ContributeForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      value: \"\",\n      loading: false,\n      errorMessage: \"\"\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      console.log(\"hello\");\n      event.preventDefault();\n      this.setState({\n        loading: true\n      });\n      const campaign = Campaign(this.props.address);\n\n      try {\n        const accounts = await web3.eth.getAccounts();\n        await campaign.methods.contribute().send({\n          from: accounts[0],\n          value: web3.utils.toWei(this.state.value, \"ether\")\n        });\n        Router.replaceRoute(`/campaigns/${this.props.address}`);\n      } catch (err) {\n        this.setState({\n          errorMessage: err.message\n        });\n      }\n\n      this.setState({\n        loading: false,\n        errorMessage: \"\"\n      });\n    });\n  }\n\n  render() {\n    return __jsx(Form, {\n      onSubmit: this.onSubmit\n    }, __jsx(Form.Field, null, __jsx(\"label\", null, \"Amount to contribute\"), __jsx(Input, {\n      value: this.state.value,\n      label: \"eth\",\n      labelPosition: \"right\",\n      onChange: event => this.setState({\n        value: event.target.value\n      })\n    })), __jsx(Form.Field, null, __jsx(Checkbox, {\n      label: \"I agree to the Terms and Conditions\"\n    })), __jsx(Button, {\n      type: \"submit\",\n      primary: true\n    }, \"Contribute\"));\n  }\n\n}\n\nexport default ContributeForm;","map":{"version":3,"sources":["/home/deepaksng00/ethereum-smart-contracts/kickstart/components/contributeform.js"],"names":["React","Component","Form","Input","Message","Checkbox","Button","Campaign","web3","Router","ContributeForm","value","loading","errorMessage","event","console","log","preventDefault","setState","campaign","props","address","accounts","eth","getAccounts","methods","contribute","send","from","utils","toWei","state","replaceRoute","err","message","render","onSubmit","target"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,OAAtB,EAA+BC,QAA/B,EAAyCC,MAAzC,QAAuD,mBAAvD;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,SAASC,MAAT,QAAuB,WAAvB;;AAEA,MAAMC,cAAN,SAA6BT,SAA7B,CAAuC;AAAA;AAAA;;AAAA,mCAC3B;AACJU,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,OAAO,EAAE,KAFL;AAGJC,MAAAA,YAAY,EAAE;AAHV,KAD2B;;AAAA,sCAOxB,MAAOC,KAAP,IAAiB;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAF,MAAAA,KAAK,CAACG,cAAN;AAEA,WAAKC,QAAL,CAAc;AAAEN,QAAAA,OAAO,EAAE;AAAX,OAAd;AACA,YAAMO,QAAQ,GAAGZ,QAAQ,CAAC,KAAKa,KAAL,CAAWC,OAAZ,CAAzB;;AAEA,UAAI;AACA,cAAMC,QAAQ,GAAG,MAAMd,IAAI,CAACe,GAAL,CAASC,WAAT,EAAvB;AACA,cAAML,QAAQ,CAACM,OAAT,CAAiBC,UAAjB,GAA8BC,IAA9B,CAAmC;AACrCC,UAAAA,IAAI,EAAEN,QAAQ,CAAC,CAAD,CADuB;AAErCX,UAAAA,KAAK,EAAEH,IAAI,CAACqB,KAAL,CAAWC,KAAX,CAAiB,KAAKC,KAAL,CAAWpB,KAA5B,EAAmC,OAAnC;AAF8B,SAAnC,CAAN;AAKJF,QAAAA,MAAM,CAACuB,YAAP,CAAqB,cAAc,KAAKZ,KAAL,CAAWC,OAAS,EAAvD;AACC,OARD,CAQE,OAAOY,GAAP,EAAY;AACV,aAAKf,QAAL,CAAc;AAAEL,UAAAA,YAAY,EAAEoB,GAAG,CAACC;AAApB,SAAd;AACH;;AACD,WAAKhB,QAAL,CAAc;AAAEN,QAAAA,OAAO,EAAE,KAAX;AAAkBC,QAAAA,YAAY,EAAE;AAAhC,OAAd;AACH,KA1BkC;AAAA;;AA4BnCsB,EAAAA,MAAM,GAAG;AACL,WACI,MAAC,IAAD;AAAM,MAAA,QAAQ,EAAK,KAAKC;AAAxB,OACI,MAAC,IAAD,CAAM,KAAN,QACI,4CADJ,EAEI,MAAC,KAAD;AACI,MAAA,KAAK,EAAK,KAAKL,KAAL,CAAWpB,KADzB;AAEI,MAAA,KAAK,EAAG,KAFZ;AAGI,MAAA,aAAa,EAAG,OAHpB;AAII,MAAA,QAAQ,EAAKG,KAAK,IAAI,KAAKI,QAAL,CAAc;AAAEP,QAAAA,KAAK,EAAEG,KAAK,CAACuB,MAAN,CAAa1B;AAAtB,OAAd;AAJ1B,MAFJ,CADJ,EAUI,MAAC,IAAD,CAAM,KAAN,QACQ,MAAC,QAAD;AAAU,MAAA,KAAK,EAAG;AAAlB,MADR,CAVJ,EAaI,MAAC,MAAD;AAAQ,MAAA,IAAI,EAAG,QAAf;AAAwB,MAAA,OAAO;AAA/B,oBAbJ,CADJ;AAmBH;;AAhDkC;;AAmDvC,eAAeD,cAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Form, Input, Message, Checkbox, Button } from \"semantic-ui-react\";\nimport Campaign from \"../ethereum/campaign\";\nimport web3 from \"../ethereum/web3\";\nimport { Router } from \"../routes\";\n\nclass ContributeForm extends Component {\n    state = {\n        value: \"\",\n        loading: false,\n        errorMessage: \"\"\n    }\n\n    onSubmit = async (event) => {\n        console.log(\"hello\");\n        event.preventDefault();\n\n        this.setState({ loading: true });\n        const campaign = Campaign(this.props.address);\n\n        try {\n            const accounts = await web3.eth.getAccounts();\n            await campaign.methods.contribute().send({\n                from: accounts[0],\n                value: web3.utils.toWei(this.state.value, \"ether\")\n            });\n\n        Router.replaceRoute(`/campaigns/${ this.props.address }`);\n        } catch (err) {\n            this.setState({ errorMessage: err.message });\n        }\n        this.setState({ loading: false, errorMessage: \"\" })\n    }\n\n    render() {\n        return (\n            <Form onSubmit = { this.onSubmit }>\n                <Form.Field>\n                    <label>Amount to contribute</label>\n                    <Input \n                        value = { this.state.value }\n                        label = \"eth\"\n                        labelPosition = \"right\"\n                        onChange = { event => this.setState({ value: event.target.value }) }\n                    />\n                </Form.Field>\n                <Form.Field>\n                        <Checkbox label = \"I agree to the Terms and Conditions\" />\n                    </Form.Field>\n                <Button type = \"submit\" primary>\n                    Contribute\n                </Button>\n            </Form>\n        );\n    }\n}\n\nexport default ContributeForm;"]},"metadata":{},"sourceType":"module"}