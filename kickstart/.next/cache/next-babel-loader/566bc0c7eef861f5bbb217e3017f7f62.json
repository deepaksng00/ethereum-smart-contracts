{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { Card, Grid } from \"semantic-ui-react\";\nimport Layout from \"../../components/layout\";\nimport Campaign from \"../../ethereum/campaign\";\nimport web3 from \"../../ethereum/web3\";\nimport ContributeForm from \"../../components/contributeform\";\n\nclass CampaignShow extends Component {\n  static async getInitialProps(props) {\n    const campaign = Campaign(props.query.address);\n    const summary = await campaign.methods.getSummary().call();\n    return {\n      address: props.query.address,\n      minimumContribution: summary[0],\n      balance: summary[1],\n      requestsCount: summary[2],\n      approversCount: summary[3],\n      manager: summary[4]\n    };\n  }\n\n  renderCards() {\n    const {\n      balance,\n      manager,\n      minimumContribution,\n      requestsCount,\n      approversCount\n    } = this.props;\n    const items = [{\n      header: manager,\n      meta: \"Address of Manager\",\n      description: \"The manager created this campaign and can create requests to withdraw money\",\n      style: {\n        overflowWrap: \"break-word\"\n      }\n    }, {\n      header: minimumContribution,\n      meta: \"Minimum contribution (wei)\",\n      description: \"You must contribute at least this much wei to become an approver\"\n    }, {\n      header: requestsCount,\n      meta: \"Number of requests\",\n      description: \"Number of people who have already donated to this campaign\"\n    }, {\n      header: web3.utils.fromWei(balance, \"ether\"),\n      meta: \"Campaign balance (ETH)\",\n      description: \"This is how much money the campaign has left to spend\"\n    }];\n    return __jsx(Card.Group, {\n      items: items\n    });\n  }\n\n  render() {\n    return __jsx(Layout, null, __jsx(\"h3\", null, \"Campaign Show\"), __jsx(Grid, null, __jsx(Grid.Column, {\n      width: 10\n    }, this.renderCards()), __jsx(Grid.Column, {\n      width: 6\n    }, __jsx(ContributeForm, null))));\n  }\n\n}\n\nexport default CampaignShow;","map":{"version":3,"sources":["/home/deepaksng00/ethereum-smart-contracts/kickstart/pages/campaigns/show.js"],"names":["React","Component","Card","Grid","Layout","Campaign","web3","ContributeForm","CampaignShow","getInitialProps","props","campaign","query","address","summary","methods","getSummary","call","minimumContribution","balance","requestsCount","approversCount","manager","renderCards","items","header","meta","description","style","overflowWrap","utils","fromWei","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,mBAA3B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;;AAEA,MAAMC,YAAN,SAA2BP,SAA3B,CAAqC;AACjC,eAAaQ,eAAb,CAA6BC,KAA7B,EAAoC;AAChC,UAAMC,QAAQ,GAAGN,QAAQ,CAACK,KAAK,CAACE,KAAN,CAAYC,OAAb,CAAzB;AACA,UAAMC,OAAO,GAAG,MAAMH,QAAQ,CAACI,OAAT,CAAiBC,UAAjB,GAA8BC,IAA9B,EAAtB;AACA,WAAO;AACHJ,MAAAA,OAAO,EAAEH,KAAK,CAACE,KAAN,CAAYC,OADlB;AAEHK,MAAAA,mBAAmB,EAAEJ,OAAO,CAAC,CAAD,CAFzB;AAGHK,MAAAA,OAAO,EAAEL,OAAO,CAAC,CAAD,CAHb;AAIHM,MAAAA,aAAa,EAAEN,OAAO,CAAC,CAAD,CAJnB;AAKHO,MAAAA,cAAc,EAAEP,OAAO,CAAC,CAAD,CALpB;AAMHQ,MAAAA,OAAO,EAAER,OAAO,CAAC,CAAD;AANb,KAAP;AAQH;;AAEDS,EAAAA,WAAW,GAAG;AACV,UAAM;AACFJ,MAAAA,OADE;AAEFG,MAAAA,OAFE;AAGFJ,MAAAA,mBAHE;AAIFE,MAAAA,aAJE;AAKFC,MAAAA;AALE,QAMF,KAAKX,KANT;AAQA,UAAMc,KAAK,GAAG,CACV;AACIC,MAAAA,MAAM,EAAEH,OADZ;AAEII,MAAAA,IAAI,EAAE,oBAFV;AAGIC,MAAAA,WAAW,EAAE,6EAHjB;AAIIC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,YAAY,EAAE;AAAhB;AAJX,KADU,EAOV;AACIJ,MAAAA,MAAM,EAAEP,mBADZ;AAEIQ,MAAAA,IAAI,EAAE,4BAFV;AAGIC,MAAAA,WAAW,EAAE;AAHjB,KAPU,EAYV;AACIF,MAAAA,MAAM,EAAEL,aADZ;AAEIM,MAAAA,IAAI,EAAE,oBAFV;AAGIC,MAAAA,WAAW,EAAE;AAHjB,KAZU,EAiBV;AACIF,MAAAA,MAAM,EAAEnB,IAAI,CAACwB,KAAL,CAAWC,OAAX,CAAmBZ,OAAnB,EAA4B,OAA5B,CADZ;AAEIO,MAAAA,IAAI,EAAE,wBAFV;AAGIC,MAAAA,WAAW,EAAE;AAHjB,KAjBU,CAAd;AAwBA,WAAO,MAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAKH;AAAtB,MAAP;AACH;;AAEDQ,EAAAA,MAAM,GAAG;AACL,WACI,MAAC,MAAD,QACI,kCADJ,EAEI,MAAC,IAAD,QACI,MAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAK;AAAvB,OACM,KAAKT,WAAL,EADN,CADJ,EAII,MAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAK;AAAvB,OACI,MAAC,cAAD,OADJ,CAJJ,CAFJ,CADJ;AAaH;;AAhEgC;;AAmErC,eAAef,YAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Card, Grid } from \"semantic-ui-react\"\nimport Layout from \"../../components/layout\";\nimport Campaign from \"../../ethereum/campaign\";\nimport web3 from \"../../ethereum/web3\";\nimport ContributeForm from \"../../components/contributeform\";\n\nclass CampaignShow extends Component {\n    static async getInitialProps(props) {\n        const campaign = Campaign(props.query.address);\n        const summary = await campaign.methods.getSummary().call();\n        return { \n            address: props.query.address,\n            minimumContribution: summary[0],\n            balance: summary[1],\n            requestsCount: summary[2],\n            approversCount: summary[3],\n            manager: summary[4]\n        };\n    }\n\n    renderCards() {\n        const {\n            balance,\n            manager,\n            minimumContribution,\n            requestsCount,\n            approversCount \n        } = this.props;\n\n        const items = [\n            {\n                header: manager,\n                meta: \"Address of Manager\",\n                description: \"The manager created this campaign and can create requests to withdraw money\",\n                style: { overflowWrap: \"break-word\" }\n            },\n            {\n                header: minimumContribution,\n                meta: \"Minimum contribution (wei)\",\n                description: \"You must contribute at least this much wei to become an approver\"\n            },\n            {\n                header: requestsCount,\n                meta: \"Number of requests\",\n                description: \"Number of people who have already donated to this campaign\"\n            },\n            {\n                header: web3.utils.fromWei(balance, \"ether\"),\n                meta: \"Campaign balance (ETH)\",\n                description: \"This is how much money the campaign has left to spend\"\n            }\n        ];\n\n        return <Card.Group items = { items } />\n    }\n\n    render() {\n        return(\n            <Layout>\n                <h3>Campaign Show</h3>\n                <Grid>\n                    <Grid.Column width = { 10 } >\n                        { this.renderCards() }\n                    </Grid.Column>\n                    <Grid.Column width = { 6 } >\n                        <ContributeForm />\n                    </Grid.Column>\n                </Grid>\n            </Layout>\n        )\n    }\n}\n\nexport default CampaignShow;"]},"metadata":{},"sourceType":"module"}