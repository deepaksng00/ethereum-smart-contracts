{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { Button, Table } from \"semantic-ui-react\";\nimport { Link } from \"../../../routes\";\nimport Layout from \"../../../components/layout\";\nimport Campaign from \"../../../ethereum/campaign\";\nimport web3 from \"../../../ethereum/web3\";\nimport RequestRow from \"../../../components/requestrow\";\n\nclass RequestIndex extends Component {\n  static async getInitialProps(props) {\n    const {\n      address\n    } = props.query;\n    const campaign = Campaign(address);\n    const requestCount = campaign.methods.getRequestsCount().call();\n    const requests = await Promise.all(Array(parseInt(requestCount)).fill().map((element, index) => {\n      return campaign.methods.requests(index).call();\n    }));\n    return {\n      address,\n      requests,\n      requestCount\n    };\n  }\n\n  renderRow() {\n    return this.props.requests.map((request, index) => {\n      return __jsx(RequestRow, {\n        key: index,\n        request: request,\n        address: this.props.address\n      });\n    });\n  }\n\n  render() {\n    const {\n      Header,\n      Row,\n      HeaderCell,\n      Body\n    } = Table;\n    return __jsx(Layout, null, __jsx(\"h3\", null, \"Pending Requests\"), __jsx(Link, {\n      route: `/campaigns/${this.props.address}/requests/new`\n    }, __jsx(\"a\", null, __jsx(Button, {\n      primary: true\n    }, \"Add Request\"))), __jsx(Table, null, __jsx(Header, null, __jsx(Row, null, __jsx(HeaderCell, null, \"ID\"), __jsx(HeaderCell, null, \"Description\"), __jsx(HeaderCell, null, \"Amount\"), __jsx(HeaderCell, null, \"Recipient\"), __jsx(HeaderCell, null, \"Approval Count\"), __jsx(HeaderCell, null, \"Approve\"), __jsx(HeaderCell, null, \"Finalise\")))));\n  }\n\n}\n\nexport default RequestIndex;","map":{"version":3,"sources":["/home/deepaksng00/ethereum-smart-contracts/kickstart/pages/campaigns/requests/index.js"],"names":["React","Component","Button","Table","Link","Layout","Campaign","web3","RequestRow","RequestIndex","getInitialProps","props","address","query","campaign","requestCount","methods","getRequestsCount","call","requests","Promise","all","Array","parseInt","fill","map","element","index","renderRow","request","render","Header","Row","HeaderCell","Body"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,mBAA9B;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;;AAEA,MAAMC,YAAN,SAA2BR,SAA3B,CAAqC;AACjC,eAAaS,eAAb,CAA6BC,KAA7B,EAAoC;AAChC,UAAM;AAAEC,MAAAA;AAAF,QAAcD,KAAK,CAACE,KAA1B;AACA,UAAMC,QAAQ,GAAGR,QAAQ,CAACM,OAAD,CAAzB;AACA,UAAMG,YAAY,GAAGD,QAAQ,CAACE,OAAT,CAAiBC,gBAAjB,GAAoCC,IAApC,EAArB;AAEA,UAAMC,QAAQ,GAAG,MAAMC,OAAO,CAACC,GAAR,CACnBC,KAAK,CAACC,QAAQ,CAACR,YAAD,CAAT,CAAL,CAA8BS,IAA9B,GAAqCC,GAArC,CAAyC,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACzD,aAAOb,QAAQ,CAACE,OAAT,CAAiBG,QAAjB,CAA0BQ,KAA1B,EAAiCT,IAAjC,EAAP;AACH,KAFD,CADmB,CAAvB;AAMA,WAAO;AAAEN,MAAAA,OAAF;AAAWO,MAAAA,QAAX;AAAqBJ,MAAAA;AAArB,KAAP;AACH;;AAEDa,EAAAA,SAAS,GAAG;AACR,WAAO,KAAKjB,KAAL,CAAWQ,QAAX,CAAoBM,GAApB,CAAwB,CAACI,OAAD,EAAUF,KAAV,KAAoB;AAC/C,aACI,MAAC,UAAD;AACI,QAAA,GAAG,EAAKA,KADZ;AAEI,QAAA,OAAO,EAAKE,OAFhB;AAGI,QAAA,OAAO,EAAK,KAAKlB,KAAL,CAAWC;AAH3B,QADJ;AAOH,KARM,CAAP;AASH;;AAEDkB,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,MAAF;AAAUC,MAAAA,GAAV;AAAeC,MAAAA,UAAf;AAA2BC,MAAAA;AAA3B,QAAoC/B,KAA1C;AACA,WACI,MAAC,MAAD,QACI,qCADJ,EAEI,MAAC,IAAD;AAAM,MAAA,KAAK,EAAK,cAAc,KAAKQ,KAAL,CAAWC,OAAS;AAAlD,OACI,iBACI,MAAC,MAAD;AAAQ,MAAA,OAAO;AAAf,qBADJ,CADJ,CAFJ,EAOI,MAAC,KAAD,QACI,MAAC,MAAD,QACI,MAAC,GAAD,QACI,MAAC,UAAD,aADJ,EAEI,MAAC,UAAD,sBAFJ,EAGI,MAAC,UAAD,iBAHJ,EAII,MAAC,UAAD,oBAJJ,EAKI,MAAC,UAAD,yBALJ,EAMI,MAAC,UAAD,kBANJ,EAOI,MAAC,UAAD,mBAPJ,CADJ,CADJ,CAPJ,CADJ;AAuBH;;AApDgC;;AAuDrC,eAAeH,YAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Button, Table } from \"semantic-ui-react\";\nimport { Link } from \"../../../routes\";\nimport Layout from \"../../../components/layout\";\nimport Campaign from \"../../../ethereum/campaign\";\nimport web3 from \"../../../ethereum/web3\";\nimport RequestRow from \"../../../components/requestrow\";\n\nclass RequestIndex extends Component {\n    static async getInitialProps(props) {\n        const { address } = props.query;\n        const campaign = Campaign(address);\n        const requestCount = campaign.methods.getRequestsCount().call();\n\n        const requests = await Promise.all(\n            Array(parseInt(requestCount)).fill().map((element, index) => {\n                return campaign.methods.requests(index).call();\n            })\n        );\n\n        return { address, requests, requestCount };\n    }\n\n    renderRow() {\n        return this.props.requests.map((request, index) => {\n            return (\n                <RequestRow\n                    key = { index }\n                    request = { request } \n                    address = { this.props.address }\n                />\n            );\n        });\n    }\n\n    render() {\n        const { Header, Row, HeaderCell, Body } = Table;\n        return (\n            <Layout>\n                <h3>Pending Requests</h3>\n                <Link route = {`/campaigns/${ this.props.address }/requests/new`}>\n                    <a>\n                        <Button primary>Add Request</Button>\n                    </a>\n                </Link>\n                <Table>\n                    <Header>\n                        <Row>\n                            <HeaderCell>ID</HeaderCell>\n                            <HeaderCell>Description</HeaderCell>\n                            <HeaderCell>Amount</HeaderCell>\n                            <HeaderCell>Recipient</HeaderCell>\n                            <HeaderCell>Approval Count</HeaderCell>\n                            <HeaderCell>Approve</HeaderCell>\n                            <HeaderCell>Finalise</HeaderCell>\n                        </Row>\n                    </Header>\n                </Table>\n            </Layout>\n        );\n    }\n}\n\nexport default RequestIndex;"]},"metadata":{},"sourceType":"module"}