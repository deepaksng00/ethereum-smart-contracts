{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { Form, Input, Message, Checkbox, Button } from \"semantic-ui-react\";\nimport Campaign from \"../ethereum/campaign\";\nimport web3 from \"../ethereum/web3\";\n\nclass ContributeForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      value: \"\",\n      loading: false\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault();\n      this.setState({\n        loading: true\n      });\n      const campaign = Campaign(this.props.address);\n\n      try {\n        const accounts = await web3.eth.getAcccounts();\n        await campaign;\n      } catch (err) {}\n    });\n  }\n\n  render() {\n    return __jsx(Form, {\n      onSubmit: this.onSubmit\n    }, __jsx(Form.Field, null, __jsx(\"label\", null, \"Amount to contribute\"), __jsx(Input, {\n      value: this.state.value,\n      label: \"eth\",\n      labelPosition: \"right\",\n      onChange: event => this.setState({\n        value: event.target.value\n      })\n    })), __jsx(Form.Field, null, __jsx(Checkbox, {\n      label: \"I agree to the Terms and Conditions\"\n    })), __jsx(Button, {\n      primary: true\n    }, \"Contribute\"));\n  }\n\n}\n\nexport default ContributeForm;","map":{"version":3,"sources":["/home/deepaksng00/ethereum-smart-contracts/kickstart/components/contributeform.js"],"names":["React","Component","Form","Input","Message","Checkbox","Button","Campaign","web3","ContributeForm","value","loading","event","preventDefault","setState","campaign","props","address","accounts","eth","getAcccounts","err","render","onSubmit","state","target"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,OAAtB,EAA+BC,QAA/B,EAAyCC,MAAzC,QAAuD,mBAAvD;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;;AAEA,MAAMC,cAAN,SAA6BR,SAA7B,CAAuC;AAAA;AAAA;;AAAA,mCAC3B;AACJS,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,OAAO,EAAE;AAFL,KAD2B;;AAAA,sCAMxB,MAAMC,KAAN,IAAe;AACtBA,MAAAA,KAAK,CAACC,cAAN;AAEA,WAAKC,QAAL,CAAc;AAAEH,QAAAA,OAAO,EAAE;AAAX,OAAd;AACA,YAAMI,QAAQ,GAAGR,QAAQ,CAAC,KAAKS,KAAL,CAAWC,OAAZ,CAAzB;;AAEA,UAAI;AACA,cAAMC,QAAQ,GAAG,MAAMV,IAAI,CAACW,GAAL,CAASC,YAAT,EAAvB;AACA,cAAML,QAAN;AACH,OAHD,CAGE,OAAOM,GAAP,EAAY,CAEb;AACJ,KAlBkC;AAAA;;AAoBnCC,EAAAA,MAAM,GAAG;AACL,WACI,MAAC,IAAD;AAAM,MAAA,QAAQ,EAAK,KAAKC;AAAxB,OACI,MAAC,IAAD,CAAM,KAAN,QACI,4CADJ,EAEI,MAAC,KAAD;AACI,MAAA,KAAK,EAAK,KAAKC,KAAL,CAAWd,KADzB;AAEI,MAAA,KAAK,EAAG,KAFZ;AAGI,MAAA,aAAa,EAAG,OAHpB;AAII,MAAA,QAAQ,EAAKE,KAAK,IAAI,KAAKE,QAAL,CAAc;AAAEJ,QAAAA,KAAK,EAAEE,KAAK,CAACa,MAAN,CAAaf;AAAtB,OAAd;AAJ1B,MAFJ,CADJ,EAUI,MAAC,IAAD,CAAM,KAAN,QACQ,MAAC,QAAD;AAAU,MAAA,KAAK,EAAG;AAAlB,MADR,CAVJ,EAaI,MAAC,MAAD;AAAQ,MAAA,OAAO;AAAf,oBAbJ,CADJ;AAmBH;;AAxCkC;;AA2CvC,eAAeD,cAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Form, Input, Message, Checkbox, Button } from \"semantic-ui-react\";\nimport Campaign from \"../ethereum/campaign\";\nimport web3 from \"../ethereum/web3\";\n\nclass ContributeForm extends Component {\n    state = {\n        value: \"\",\n        loading: false\n    }\n\n    onSubmit = async event => {\n        event.preventDefault();\n\n        this.setState({ loading: true });\n        const campaign = Campaign(this.props.address);\n\n        try {\n            const accounts = await web3.eth.getAcccounts();\n            await campaign\n        } catch (err) {\n\n        }\n    }\n\n    render() {\n        return (\n            <Form onSubmit = { this.onSubmit }>\n                <Form.Field>\n                    <label>Amount to contribute</label>\n                    <Input \n                        value = { this.state.value }\n                        label = \"eth\"\n                        labelPosition = \"right\"\n                        onChange = { event => this.setState({ value: event.target.value }) }\n                    />\n                </Form.Field>\n                <Form.Field>\n                        <Checkbox label = \"I agree to the Terms and Conditions\" />\n                    </Form.Field>\n                <Button primary>\n                    Contribute\n                </Button>\n            </Form>\n        );\n    }\n}\n\nexport default ContributeForm;"]},"metadata":{},"sourceType":"module"}