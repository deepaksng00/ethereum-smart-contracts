{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { Form, Input, Message, Checkbox, Button } from \"semantic-ui-react\";\nimport Campaign from \"../ethereum/campaign\";\n\nvar ContributeForm = /*#__PURE__*/function (_Component) {\n  _inherits(ContributeForm, _Component);\n\n  var _super = _createSuper(ContributeForm);\n\n  function ContributeForm() {\n    var _this;\n\n    _classCallCheck(this, ContributeForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      value: \"\",\n      loading: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\", function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        loading: true\n      });\n\n      var campaign = Campaign(_this.props.address);\n    });\n\n    return _this;\n  }\n\n  _createClass(ContributeForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Form, {\n        onSubmit: this.onSubmit\n      }, __jsx(Form.Field, null, __jsx(\"label\", null, \"Amount to contribute\"), __jsx(Input, {\n        value: this.state.value,\n        label: \"eth\",\n        labelPosition: \"right\",\n        onChange: function onChange(event) {\n          return _this2.setState({\n            value: event.target.value\n          });\n        }\n      })), __jsx(Form.Field, null, __jsx(Checkbox, {\n        label: \"I agree to the Terms and Conditions\"\n      })), __jsx(Button, {\n        primary: true\n      }, \"Contribute\"));\n    }\n  }]);\n\n  return ContributeForm;\n}(Component);\n\nexport default ContributeForm;","map":{"version":3,"sources":["/home/deepaksng00/ethereum-smart-contracts/kickstart/components/contributeform.js"],"names":["React","Component","Form","Input","Message","Checkbox","Button","Campaign","ContributeForm","value","loading","event","preventDefault","setState","campaign","props","address","onSubmit","state","target"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,OAAtB,EAA+BC,QAA/B,EAAyCC,MAAzC,QAAuD,mBAAvD;AACA,OAAOC,QAAP,MAAqB,sBAArB;;IAEMC,c;;;;;;;;;;;;;;;;4DACM;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,OAAO,EAAE;AAFL,K;;+DAKG,UAAAC,KAAK,EAAI;AAChBA,MAAAA,KAAK,CAACC,cAAN;;AAEA,YAAKC,QAAL,CAAc;AAAEH,QAAAA,OAAO,EAAE;AAAX,OAAd;;AAEA,UAAMI,QAAQ,GAAGP,QAAQ,CAAC,MAAKQ,KAAL,CAAWC,OAAZ,CAAzB;AAGH,K;;;;;;;6BAEQ;AAAA;;AACL,aACI,MAAC,IAAD;AAAM,QAAA,QAAQ,EAAK,KAAKC;AAAxB,SACI,MAAC,IAAD,CAAM,KAAN,QACI,4CADJ,EAEI,MAAC,KAAD;AACI,QAAA,KAAK,EAAK,KAAKC,KAAL,CAAWT,KADzB;AAEI,QAAA,KAAK,EAAG,KAFZ;AAGI,QAAA,aAAa,EAAG,OAHpB;AAII,QAAA,QAAQ,EAAK,kBAAAE,KAAK;AAAA,iBAAI,MAAI,CAACE,QAAL,CAAc;AAAEJ,YAAAA,KAAK,EAAEE,KAAK,CAACQ,MAAN,CAAaV;AAAtB,WAAd,CAAJ;AAAA;AAJtB,QAFJ,CADJ,EAUI,MAAC,IAAD,CAAM,KAAN,QACQ,MAAC,QAAD;AAAU,QAAA,KAAK,EAAG;AAAlB,QADR,CAVJ,EAaI,MAAC,MAAD;AAAQ,QAAA,OAAO;AAAf,sBAbJ,CADJ;AAmBH;;;;EApCwBR,S;;AAuC7B,eAAeO,cAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Form, Input, Message, Checkbox, Button } from \"semantic-ui-react\";\nimport Campaign from \"../ethereum/campaign\";\n\nclass ContributeForm extends Component {\n    state = {\n        value: \"\",\n        loading: false\n    }\n\n    onSubmit = event => {\n        event.preventDefault();\n\n        this.setState({ loading: true });\n\n        const campaign = Campaign(this.props.address);\n\n\n    }\n\n    render() {\n        return (\n            <Form onSubmit = { this.onSubmit }>\n                <Form.Field>\n                    <label>Amount to contribute</label>\n                    <Input \n                        value = { this.state.value }\n                        label = \"eth\"\n                        labelPosition = \"right\"\n                        onChange = { event => this.setState({ value: event.target.value }) }\n                    />\n                </Form.Field>\n                <Form.Field>\n                        <Checkbox label = \"I agree to the Terms and Conditions\" />\n                    </Form.Field>\n                <Button primary>\n                    Contribute\n                </Button>\n            </Form>\n        );\n    }\n}\n\nexport default ContributeForm;"]},"metadata":{},"sourceType":"module"}